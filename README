The original documentation for pKNyX can be found at http://www.pknyx.org

This is the "knxd version" because it has been heavily modified by the
current principal maintainer of knxd.

See the file "design/v2_knxd.rst" for more rationale and documentation.

Overview
========

pKNyX is a KNX stack written in Python. It supports virtual devices and
multiple bus interfaces.

Current status: the only interface that's actually in the code is the
standard KNX multicast. If you want to talk to anything else, run "knxd"
(on the same computer is fine). You'll need either the "-b ip:" or
the "-R -S" options.

Future plans
============

Rewrite FunctionalBlock and Device setup. Using special class variables
causes errors to be hard to find; setting up a device in code requires a
class per device instead of per device type which is unnecessary.

Support packets to a device's physical address.

Drop threads in favor of asyncio (Python 3 only).

The code base of knxd is rather dated. Extend pKNyX to serve as a
feature-complete replacement.

Changes
=======

pKNyX 1.0
---------

The main loop has been moved to the ETS object, which is no longer a
singleton. It is also now responsible for assigning physical addresses to
drivers. This allows you to create more than one device per ETS instance,
as well as more than one driver to actually talk to a bus. You can also run
more than one ETS instance within a process.

Various threads are no longer required and have been removed. Thus, an
instance with 1000 devices (not uncommon if you want to monitor a large
building) now uses five threads instead of 5000.

Tests have been moved to a "tests/" directory. This enables testing against
installed or otherwise out-of-tree version of pKNyX, allowing you to run
new tests on an old copy or vice versa.


